CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    phone_number VARCHAR(20),
    email VARCHAR(255)
);
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    branch_id INT,
    order_date DATE,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (branch_id) REFERENCES branches(branch_id)
);
CREATE TABLE branches (
    branch_id INT PRIMARY KEY,
    branch_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(20)
);
CREATE TABLE pizza_menus (
  pizza_id INT PRIMARY KEY,
  pizza_name VARCHAR(255),
  price DECIMAL(8, 2)
  );

INSERT INTO customers (customer_id, first_name, last_name, phone_number, email)
VALUES 
  (1, 'Phanurak', 'Tangchit', '099-888-7777', 'Phanurak.t@krabi.com'),  -- Customer 1
  (2, 'Kanokkan', 'Khunkeaw', '098-654-3210', 'Kanokkan.k@krabi.com'),  -- Customer 2
  (3, 'Phanukan', 'Rakhom', '097-634-3515', 'Phanukan.t@krabi.com'),  -- Customer 3
  (4, 'Somsak', 'Yodchai', '099-123-4567', 'somsak.s@krabi.com'),      -- Customer 4
  (5, 'Naree', 'Nakorn', '098-765-4321', 'naree.n@krabi.com'),         -- Customer 5
  (6, 'Wichai', 'Wongwiset', '097-987-6543', 'wichai.w@krabi.com'),    -- Customer 6
  (7, 'Supatra', 'Sukjai', '098-321-6547', 'supatra.s@krabi.com'),     -- Customer 7
  (8, 'Preecha', 'Pramot', '099-555-7777', 'preecha.p@krabi.com');     -- Customer 8

INSERT INTO orders (order_id, customer_id, branch_id, order_date, total_amount)
VALUES (1, 3, 1, '2023-11-04', 90.50),
       (2, 2, 2, '2023-11-05', 95.00),
       (3, 1, 3, '2023-11-06', 60.50),
       (4, 4, 1, '2023-11-07', 75.00),
       (5, 5, 2, '2023-11-08', 55.75),
       (6, 6, 3, '2023-11-09', 120.25),
       (7, 7, 1, '2023-11-10', 98.00),
       (8, 8, 2, '2023-11-11', 110.50);

INSERT INTO branches (branch_id,branch_name, address, phone_number)
VALUES 
  (1, 'Krabi Branch', '89 Krabi town, Krabi', '999-4444'),
  (2, 'Phuket Branch', '27 Singhanakorn, Phuket', '998-4444'),
  (3, 'Songkhla Branch', '69 Tanon nangngam, Songkhla Branch', '997-4444');

INSERT INTO pizza_menus (pizza_id, pizza_name, price)
VALUES
(1, 'Veggie Supreme', 12.00),
(2, 'Margarita Special', 11.00),
(3, 'BBQ Chicken Pizza', 14.00),
(4, 'Supreme Deluxe', 15.50);
.mode box
select * from customers ;
select * from orders ;
select * from branches ;
select * from pizza_menus ;

SELECT
    customers.first_name,
    customers.last_name,
    orders.order_date
FROM
    customers
INNER JOIN
    orders ON customers.customer_id = orders.customer_id;

SELECT
    c.first_name AS fullname,
    c.last_name AS lastname,
    o.order_id,
    o.order_date,
    pm.pizza_name,
    pm.price
FROM
    customers c
JOIN
    orders o ON c.customer_id = o.customer_id
JOIN
    pizza_menus pm ON o.order_id = pm.pizza_id;

WITH CustomerOrderPizza AS (
  SELECT
      c.customer_id,
      c.first_name,
      c.last_name,
      o.order_id,
      o.order_date,
      p.pizza_name,
      p.price
  FROM customers c
  JOIN orders o ON c.customer_id = o.customer_id
  JOIN pizza_menus p ON o.order_id = p.pizza_id
)
SELECT * FROM CustomerOrderPizza;

SELECT branch_id, SUM(total_amount) AS total_sales
FROM orders
GROUP BY branch_id;

SELECT AVG(total_amount) AS average_order_total
FROM orders;

SELECT MIN(price) AS min_price, MAX(price) AS max_price
FROM pizza_menus;

SELECT customer_id, COUNT(order_id) AS order_count
FROM orders
GROUP BY customer_id;

SELECT branch_name, phone_number
FROM branches
WHERE branch_id IN (
    SELECT branch_id
    FROM orders
    GROUP BY branch_id
    HAVING COUNT(*) > 1
);

SELECT order_id, order_date, total_amount
FROM orders
WHERE customer_id = (SELECT customer_id FROM customers WHERE first_name = 'Phanurak' AND last_name = 'Tangchit');

SELECT customer_id, first_name, last_name
FROM customers
WHERE customer_id IN (SELECT customer_id FROM orders WHERE total_amount > 80.00);

SELECT c.customer_id, c.first_name, c.last_name, SUM(o.total_amount) AS total_order_amount
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name;

SELECT b.branch_id, b.branch_name, SUM(o.total_amount) AS total_sales
FROM branches b
LEFT JOIN orders o ON b.branch_id = o.branch_id
GROUP BY b.branch_id, b.branch_name
ORDER BY total_sales DESC;
